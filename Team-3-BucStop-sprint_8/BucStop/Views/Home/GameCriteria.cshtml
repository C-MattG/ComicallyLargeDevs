
﻿@{
    ViewData["Title"] = "Game Criteria";
}

<!--Inserted HTML-->
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Submission Form</title>

  <!-- Link to an external CSS file -->
  <link rel="stylesheet" href="Form.css">
  
</head>
<body>

<!-- Page detailing what criteria a game should meet to be added to the site.-->

<h1>@ViewData["Title"]</h1>

<p>In order to have your game listed on BucStop, your game needs to meet certain criteria: </p>

<ul>
    <li>Must have a name which is not offensive and is less than 50 characters long</li>
    <li>Must have controls which are able to be used on both PC and mobile</li>

        <ul>
            <li>Recommendation is to have it use the arrow keys, as the site will already map swipes to the keys</li>
        </ul>
    <li>Must not contain any offensive material</li>
        <ul>
        <li>Offensive material: material which would give a negative impression of the school</li>
                <ul>
                    <li>Including but not limited to: use of expletives, gore/excessive violence, use of controlled substances, suggestive material, racially insensitive content, illegal material, et cetera</li>
                </ul>
        </ul>

    <li>Must be written in Javascript</li>
    <li>Must not have advertisements</li>
    <li>Must not contain any software which could be deemed as malicious</li>
    <li>Must not contain excessive flashing lights or loud sounds</li>
    <li>Must not infringe on any existing copyrighted material</li>
    <li>The file size of the game and all other necessary materials (including images, sounds, et cetera) should not exceed 10MB</li>
    <li>The canvas of the game must be within 640 px by 640 px</li>
    <li>Must not collect user data outside of the bare minimum to save progress in the game</li>
    <li>Any non-javascript files necessary for the game to run must be included in a folder</li>
</ul>
<hr>
<h1>Add your game</h1>
<iframe src="https://docs.google.com/forms/d/e/1FAIpQLSdxu3kg1Cm7Sc7wogaYuRNzbL8fafdTQ9I_nyuCIttKzlg63Q/viewform?embedded=true" width="640" height="1201" frameborder="0" marginheight="0" marginwidth="0">Loading…</iframe>


<!--Form stuff. Temporary text box submission for testing-->
<h2>Submit Your JS file</h2>

<!-- Used GitHub and prompteed 'edit the code to take only JS files inputs' using the code from the text box format perviously -->
<!-- The form will submit JS files only -->
<form id="textForm">
  <!-- This should render as a file input box -->
  <input type="file" id="fileInput" accept=".js" />
  <button type="submit">Submit</button>
</form>

<script>
  // Function to handle JS file form submission
  document.getElementById('textForm').addEventListener('submit', function(event) 
   {
      event.preventDefault(); // Prevent form from submitting the traditional way
    
      // Get the file from the input
      const fileInput = document.getElementById('fileInput');
      const file = fileInput.files[0];
      
      // Error handling
      if (!file) 
      {
          // If no file is selected, display an error message
          document.getElementById('errorMessages').textContent = 'Please select a .js file.';
          return;
      }
      
      // Check if the file is a .js file
      if (file.type !== 'application/javascript' && file.name.split('.').pop() !== 'js') 
      {
          // If the file is not a .js file, display an error message
          document.getElementById('errorMessages').textContent = 'Only .js files are allowed.';
          return;
      } 
      else 
      {
          // If the file is valid, clear any previous error message
          document.getElementById('errorMessages').textContent = '';
      }
      
      // Process the file (you can read its content, upload it, or handle it further)
      console.log('File submitted:', file.name);
      
      // Optionally, you can reset the form after successful submission
      document.getElementById('textForm').reset();
      //end of JS file submission

      // Simulate a server response
      //const isSuccess = ; // 

      if (isSuccess) 
      {
        document.getElementById('successMessages').textContent = 'Message submitted successfully!';
        document.getElementById('errorMessages').textContent = '';
      } 
      else 
      {
        document.getElementById('errorMessages').textContent = 'Failed to submit the message. Please try again.';
        document.getElementById('successMessages').textContent = '';
      }
      // For now, we log the message data (you can send it to a server or database here)
      console.log('Message Submitted:', message);

      // Optionally reset the form after submission
      document.getElementById('textForm').reset();
      document.getElementById('errorMessages').textContent = '';
    });
</script>

</body>
</html>
